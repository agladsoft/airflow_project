# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# Basic Airflow cluster configuration for CeleryExecutor with Redis and PostgreSQL.
#
# WARNING: This configuration is for local development. Do not use it in a production deployment.
#
# This configuration supports basic configuration using environment variables or an .env file
# The following variables are supported:
#
# AIRFLOW_IMAGE_NAME         - Docker image name used to run Airflow.
#                              Default: apache/airflow:master-python3.8
# AIRFLOW_UID                - User ID in Airflow containers
#                              Default: 50000
# AIRFLOW_GID                - Group ID in Airflow containers
#                              Default: 50000
# _AIRFLOW_WWW_USER_USERNAME - Username for the administrator account.
#                              Default: airflow
# _AIRFLOW_WWW_USER_PASSWORD - Password for the administrator account.
#                              Default: airflow
#
# Feel free to modify this file to suit your needs.

version: '3.8'
x-airflow-common:
  &airflow-common
  build: .
  image: ${AIRFLOW_IMAGE_NAME:-extending_airflow:latest}
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__SCHEDULER__MIN_FILE_PROCESS_INTERVAL: 10
  env_file:
    - .env
  volumes:
    - ./dags:${DOCKER_PATH_DAGS}
    - ./logs:${DOCKER_PATH_LOGS}
    - ./plugins:${DOCKER_PATH_PLUGINS}
    - ./dbt_postgres_db:${DOCKER_PATH_DBT_POSTGRES}
    - ./dbt_clickhouse_db:${DOCKER_PATH_DBT_CLICKHOUSE}
    - ${LOCAL_PATH_REFERENCE_INN_BY_API_FILES}:${DOCKER_PATH_REFERENCE_INN_BY_API_FILES}
    - ${LOCAL_PATH_EXPORT_NW_FILES}:${DOCKER_PATH_EXPORT_NW_FILES}
    - ${LOCAL_PATH_B24_FACT_FILES}:${DOCKER_PATH_B24_FACT_FILES}
  user: "0:0"
  depends_on:
    postgres:
      condition: service_healthy

services:
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - ./postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    restart: always

  clickhouse:
    image: bitnami/clickhouse:24.2.2
    container_name: clickhouse
    restart: always
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - ./clickhouse:/bitnami/clickhouse
    environment:
      - CLICKHOUSE_ADMIN_PASSWORD=6QVnYsC4iSzz

  dbeaver:
    image: dbeaver/cloudbeaver:24.2.0
    container_name: dbeaver
    restart: always
    ports:
      - "8121:8978"
    volumes:
      - ./workspace:/opt/cloudbeaver/workspace

  superset:
    image: apache/superset:4.0.2
    container_name: superset
    restart: always
    ports:
      - "8088:8088"
    environment:
      - SUPERSET_SECRET_KEY=q4_&x2&m2tt!xx-17gy34)syq_a9)7%@c(n2h55#93ym73p!-q
      - SQLALCHEMY_DATABASE_URI=postgresql://postgres:airflow@airflow:5432/superset
    volumes:
      - ./superset_home:/app/superset_home
      - ./superset_home/superset_config.py:/app/superset_config.py
      - ./superset_home/requirements.txt:/app/requirements/requirements.txt
    depends_on:
      - postgres
      - clickhouse
    command: >
      bash -c "
      superset fab create-admin --username admin --firstname Superset --lastname Admin --email admin@superset.com --password admin &&
      superset db upgrade &&
      superset init &&
      pip install -r requirements/requirements.txt &&
      superset run -h 0.0.0.0 -p 8088 --with-threads --reload --debugger
      "

  airflow-webserver:
    <<: *airflow-common
    container_name: airflow-webserver
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always

  airflow-scheduler:
    <<: *airflow-common
    container_name: airflow-scheduler
    command: scheduler
    restart: always

  airflow-init:
    <<: *airflow-common
    container_name: airflow-init
    command: version
    environment:
      <<: *airflow-common-env
      _AIRFLOW_DB_UPGRADE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME:-airflow}
      _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD:-airflow}